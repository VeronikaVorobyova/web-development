<?php add_filter('show_admin_bar', '__return_false'); remove_action('wp_head', 'print_emoji_detection_script', 7); remove_action('admin_print_scripts', 'print_emoji_detection_script'); remove_action('wp_print_styles', 'print_emoji_styles'); remove_action('admin_print_styles', 'print_emoji_styles'); remove_action('wp_head', 'wp_resource_hints', 2 ); // remove dns-prefetch remove_action('wp_head', 'wp_generator'); // remove meta name="genera-tor" remove_action('wp_head', 'wlwmanifest_link'); // remove wlwmanifest remove_action('wp_head', 'rsd_link'); // remove EditURI remove_action('wp_head', 'rest_output_link_wp_head'); // remove 'https://api.w.org/ remove_action('wp_head', 'rel_canonical'); // remove canonical remove_action('wp_head', 'wp_shortlink_wp_head', 10); // remove shortlink remove_action('wp_head', 'wp_oembed_add_discovery_links'); // remove alternate add_action('wp_enqueue_scripts', 'load_bootstrap'); function load_bootstrap() { wp_enqueue_style ('bootstrap-style', get_template_directory_uri() . '/boot-strap/node_modules/bootstrap/dist/css/bootstrap.min.css', array(), ' '); wp_enqueue_style ('bootstrap-style-icons', get_template_directory_uri() . '/boot-strap/node_modules/bootstrap-icons/font/bootstrap-icons.css', array(), ' '); wp_enqueue_style ('style-css', get_stylesheet_uri(), array(), ' '); wp_enqueue_style ('google-font', 'https://fonts.googleapis.com/css2?fam-ily=Nunito:wght@400;700&display=swap', array(), ' '); wp_enqueue_script('bootstrap-js', get_template_directory_uri() . '/boot-strap/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js', array('jquery'), ' '); }

add_action('after_setup_theme', 'theme_support'); function theme_support() { register_nav_menu('menu_main_header', 'Меню в шапке'); add_theme_support('post-thumbnails'); } add_action('after_setup_theme', 'crb_load'); function crb_load() { require_once('package/carbon-fields/vendor/autoload.php'); \Carbon_Fields\Carbon_Fields::boot(); } add_action('carbon_fields_register_fields', 'crb_attach_theme_options'); function crb_attach_theme_options() { require_once('package/carbon-fields/options/theme-options.php'); } add_action('init', 'register_post_types'); /// Отключение всякой шняги во 'Внешнем виде' add_action('customize_register', 'verb_customize_register'); function verb_customize_register(WP_Customize_Manager $wp_customize) { $wp_customize->remove_panel('nav_menus'); } function wp_bootstrap_pagination( $args = array() ) { $defaults = array( 'range' => 4, 'custom_query' => FALSE, 'previous_string' => __( '<<', 'xakpl' ), 'next_string' => __( '>>', 'xakpl' ), 'before_output' => '<nav aria-label="Page navigation example"><ul class="pagi-nation justify-content-center">', 'after_output' => '</ul></nav>' ); $args = wp_parse_args( $args, apply_filters( 'wp_bootstrap_pagination_defaults', $defaults ) ); $args['range'] = (int) $args['range'] - 1; if ( !$args['custom_query'] ) $args['custom_query'] = @$GLOBALS['wp_query'];

$count = (int) $args['custom_query']->max_num_pages; $page = intval( get_query_var( 'paged' ) ); $ceil = ceil( $args['range'] / 2 ); if ( $count <= 1 ) return FALSE; if ( !$page ) $page = 1; if ( $count > $args['range'] ) { if ( $page <= $args['range'] ) { $min = 1; $max = $args['range'] + 1; } elseif ( $page >= ($count - $ceil) ) { $min = $count - $args['range']; $max = $count; } elseif ( $page >= $args['range'] && $page < ($count - $ceil) ) { $min = $page - $ceil; $max = $page + $ceil; } } else { $min = 1; $max = $count; } $echo = ''; $previous = intval($page) - 1; $previous = esc_attr( get_pagenum_link($previous) ); if ( $previous && (1 != $page) ) $echo .= '<li class="page-item"><a class="page-link" href="' . $previous . '" ti-tle="' . __( 'previous', 'xakpl') . '">' . $args['previous_string'] . '</a></li>'; if ( !empty($min) && !empty($max) ) { for( $i = $min; $i <= $max; $i++ ) { if ($page == $i) { $echo .= '<li class="active page-item"><span class="active page-link">' . str_pad( (int)$i, 2, '0', STR_PAD_LEFT ) . '</span></li>'; } else { $echo .= sprintf( '<li class="page-item"><a class="page-link" href="%s">%002d</a></li>', esc_attr( get_pagenum_link($i) ), $i ); } }

} $next = intval($page) + 1; $next = esc_attr( get_pagenum_link($next) ); if ($next && ($count != $page) ) $echo .= '<li class="page-item"><a class="page-link" href="' . $next . '" ti-tle="' . __( 'next', 'xakpl') . '">' . $args['next_string'] . '</a></li>'; if ( isset($echo) ) echo $args['before_output'] . $echo . $args['after_output']; }